version: '3.8'

services:
  app:
    build: .
    container_name: logistics-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./filejson:/app/filejson
      - ./.env:/app/.env:ro
    environment:
      - NODE_ENV=production
    networks:
      - logistics-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  nginx:
    image: nginx:alpine
    container_name: logistics-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - logistics-network

networks:
  logistics-network:
    driver: bridge

volumes:
  filejson_data: